[package]
name = "aqueducts-core"
authors.workspace = true
edition.workspace = true
description = "Core data pipeline definition and execution engine for Aqueducts"
repository.workspace = true
readme.workspace = true
version.workspace = true
homepage.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true

[features]
default = ["yaml", "formats"]
s3 = ["aqueducts-storage/s3"]
gcs = ["aqueducts-storage/gcs"]
azure = ["aqueducts-storage/azure"]
odbc = ["aqueducts-odbc"]
schema_gen = ["schemars", "aqueducts-delta/schema_gen", "aqueducts-formats/schema_gen"]
json = ["dep:serde_json"]
yaml = ["dep:serde_yml"]
toml = ["dep:toml"]
# Format handling
formats = ["aqueducts-formats"]
storage = [] # Empty feature to fix cfg warning
parquet = ["formats", "aqueducts-formats/parquet"]
csv = ["formats", "aqueducts-formats/csv"]
json_format = ["formats", "aqueducts-formats/json"]
avro = ["formats", "aqueducts-formats/avro"]
# Enable all features (cloud storage, formats, odbc)
full = ["s3", "gcs", "azure", "odbc", "json", "yaml", "toml", "schema_gen", "parquet", "csv", "json_format", "avro"]

[dependencies]
datafusion.workspace = true
deltalake.workspace = true

serde.workspace = true
serde_json = { workspace = true, optional = true }
serde_yml = { workspace = true, optional = true }
toml = { workspace = true, optional = true }
schemars = { workspace = true, optional = true }

tokio.workspace = true

thiserror.workspace = true

tracing.workspace = true

url.workspace = true
regex.workspace = true
derive-new.workspace = true
chrono.workspace = true
async-trait.workspace = true

aqueducts-delta = { workspace = true }
aqueducts-formats = { workspace = true, optional = true }
aqueducts-odbc = { workspace = true, optional = true }
aqueducts-storage = { workspace = true }

[dev-dependencies]
tokio = { workspace = true, features = ["full"] }
rand.workspace = true
tracing-test.workspace = true
